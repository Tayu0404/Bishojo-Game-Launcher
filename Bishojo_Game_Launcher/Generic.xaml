<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:control="clr-namespace:BishojoGameLauncher.Control">

	<SolidColorBrush x:Key="DefaultForeground" Color="White"/>
	<SolidColorBrush x:Key="DefaultBackground" Color="#505050"/>
	<SolidColorBrush x:Key="DefaultBorderBrush" Color="Black"/>
	<SolidColorBrush x:Key="DefaultWindowBackground" Color="#FF494949"/>
	<SolidColorBrush x:Key="DarkBackground" Color="#454545"/>
	<SolidColorBrush x:Key="SelectedHighlightedBackground" Color="#656565"/>
	<SolidColorBrush x:Key="MouseOverHighlightedBackground" Color="#757575"/>
	<SolidColorBrush x:Key="HighlightedBorderBrush" Color="#505050"/>
	<SolidColorBrush x:Key="PopupBackground" Color="#606060"/>

	<!-- Window Style -->
    <System:Double x:Key="CaptionHeight">26</System:Double>
	<Style TargetType="{x:Type Window}" x:Key="DefaultWindowStyle">
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome
					CornerRadius="3"
					GlassFrameThickness="0"
					ResizeBorderThickness="8"
					UseAeroCaptionButtons="False"
					CaptionHeight="{DynamicResource CaptionHeight}"/>
			</Setter.Value>
		</Setter>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
		<Setter Property="Background" Value="{StaticResource DefaultWindowBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
	</Style>

	<!-- Button Style -->
	<Style TargetType="{x:Type Button}" x:Key="DefaultButtonStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource MouseOverHighlightedBackground}" TargetName="Border" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Close Button Style-->
	<Style TargetType="{x:Type Button}" x:Key="CloseButtonStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" Background="{TemplateBinding Background}">
						<Path
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Stroke="{TemplateBinding Foreground}"
							StrokeThickness="1"
							Data="M0,0 L10,10 M0,10 L10,0"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="IndianRed" TargetName="Border" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Maxmize Button Style -->
	<Style TargetType="{x:Type Button}" x:Key="MaxmizeButtonStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" Background="{TemplateBinding Background}">
						<Path
							x:Name="ContentPath"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Stroke="{StaticResource DefaultForeground}"
							StrokeThickness="1"
							/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="Normal">
							<Setter TargetName="ContentPath" Property="Data" Value="M0,0 L0,10 10,10 10,0 Z"/>
						</Trigger>
						<Trigger Property="Tag" Value="Maxmize">
							<Setter TargetName="ContentPath" Property="Data" Value="M0,1 L9,1 9,10 0,10 Z M2,2 L2,-2 12,-2 12,8 10,8"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource MouseOverHighlightedBackground}" TargetName="Border" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Minimize Button Style -->
	<Style TargetType="{x:Type Button}" x:Key="MinimizeButtonStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" Background="{TemplateBinding Background}">
						<Path
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Stroke="{TemplateBinding Foreground}"
							StrokeThickness="1"
							Data="M0,0 L0,0 10,0"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource MouseOverHighlightedBackground}" TargetName="Border" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Button with background color -->
	<Style TargetType="{x:Type Button}" x:Key="BackgroundColerButtonStyle">
		<Setter Property="Background" Value="{StaticResource DefaultBackground}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource MouseOverHighlightedBackground}" TargetName="Border" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TextBlock Style -->
	<Style TargetType="{x:Type TextBlock}" x:Key="DefaultTextBlockStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<!-- ListBox Style -->
	<Style TargetType="{x:Type ListBox}" x:Key="DefaultListBoxStyle">
		<Setter Property="FontSize" Value="15"/>
		<Setter Property="Background" Value="{StaticResource DefaultBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
	</Style>

	<!-- ListBoxItem Style -->
	<Style TargetType="{x:Type ListBoxItem}" x:Key="DefaultListBoxItemStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContentControl}">
					<Border Background="{TemplateBinding Background}">
						<ContentPresenter />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{StaticResource SelectedHighlightedBackground}"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource MouseOverHighlightedBackground}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- TextBox Style -->
	<Style TargetType="{x:Type TextBox}" x:Key="DefaultTextBoxStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="CaretBrush" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Grid Background="{TemplateBinding Background}">
						<ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center"/>
						<TextBlock
							x:Name="WaterMarkLabel"
							Text="{TemplateBinding Tag}"
							Opacity=".5"
							VerticalAlignment="Center"
							HorizontalAlignment="Left"
							Margin="5,0,0,0"
							Visibility="Collapsed"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Text" Value="">
							<Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Border Style -->
	<Style TargetType="{x:Type Border}" x:Key="DefaultBorderStyle">
		<Setter Property="Background" Value="{StaticResource DarkBackground}"/>
		<Setter Property="BorderBrush" Value="Black"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<!-- ComboBox Style -->
	<!-- Custom Toggle Button Style -->
	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border
				x:Name="ToggleButtonBorder" 
				Grid.ColumnSpan="2"
				CornerRadius="0"
				Background="Transparent"
				BorderBrush="Transparent"/>
			<Border 
				x:Name="TextBorder"
				Grid.Column="0"
				CornerRadius="0" 
				Margin="1" 
				Background="Transparent" 
				BorderBrush="Transparent"/>
			<Path 
                x:Name="Arrow"
                Grid.Column="1"     
                Fill="{StaticResource DefaultForeground}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="ToggleButton.IsMouseOver" Value="true">
				<Setter TargetName="ToggleButtonBorder" Property="Background" Value="{StaticResource MouseOverHighlightedBackground}" />
				<Setter TargetName="TextBorder" Property="Background" Value="{StaticResource MouseOverHighlightedBackground}"/>
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="true">
				<Setter TargetName="ToggleButtonBorder" Property="Background" Value="{StaticResource SelectedHighlightedBackground}" />
			</Trigger>
			<!--
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="ToggleButtonBorder" Property="Background" Value="#EEEEEE" />
				<Setter TargetName="ToggleButtonBorder" Property="BorderBrush" Value="#AAAAAA" />
				<Setter Property="Foreground" Value="#888888"/>
				<Setter TargetName="Arrow" Property="Fill" Value="#888888" />
			</Trigger>
			-->
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
	</ControlTemplate>

	<Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="MinWidth" Value="60"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton 
							Name="ToggleButton" 
							Template="{StaticResource ComboBoxToggleButton}" 
							Grid.Column="2"
							Focusable="false"
							IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
							ClickMode="Press">
						</ToggleButton>
						<ContentPresenter
							Name="ContentSite"
							IsHitTestVisible="False"
							Content="{TemplateBinding SelectionBoxItem}"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							Margin="3,3,23,3"
							VerticalAlignment="Center"
							HorizontalAlignment="Left" />
						<TextBox x:Name="PART_EditableTextBox"
							Style="{x:Null}" 
							Template="{StaticResource ComboBoxTextBox}" 
							HorizontalAlignment="Left" 
							VerticalAlignment="Center" 
							Margin="3,3,23,3"
							Focusable="True" 
							Visibility="Hidden"
							IsReadOnly="{TemplateBinding IsReadOnly}"/>
						<Popup 
							Name="Popup"
							Placement="Bottom"
							IsOpen="{TemplateBinding IsDropDownOpen}"
							AllowsTransparency="True" 
							Focusable="False"
							PopupAnimation="Slide">

							<Grid Name="DropDown"
								SnapsToDevicePixels="True"                
								MinWidth="{TemplateBinding ActualWidth}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border 
									x:Name="DropDownBorder"
									Background="#555555"
									BorderThickness="1"
									BorderBrush="Transparent"/>
								<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="Gray"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
						</Trigger>
						<Trigger Property="IsEditable"  Value="true">
							<Setter Property="IsTabStop" Value="false"/>
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
							<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
		</Style.Triggers>
	</Style>

	<!-- Default ComboBoxItem Style -->
	<Style x:Key="DefaultComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border
						Name="Border"
						Padding="2"
						SnapsToDevicePixels="true">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource MouseOverHighlightedBackground}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#888888"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ListBox Style -->
	<Style TargetType="{x:Type ListBox}" x:Key="ClearListBoxStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
	</Style>

	<!-- Grid Style -->
	<Style TargetType="{x:Type Grid}" x:Key="DefaultGridStyle">
		<Setter Property="Background" Value="{StaticResource DefaultWindowBackground}"/>
	</Style>

	<!-- Custom Scroll Viewer Style -->
	<!-- Width of scroll bar -->
	<System:Double x:Key="ScrollBarSize">15</System:Double>
	<!-- Button height -->
	<System:Double x:Key="ScrollBarRepeatButtonSize">15</System:Double>
	<!-- Scrollbar margin -->
	<System:Double x:Key="ScrollBarMarginSize">5</System:Double>
	<!-- Scroll bar Color-->
	<SolidColorBrush x:Key="ScrollBarColorBrush" Color="#252525" />
	<!-- Color when the button is pressed -->
	<SolidColorBrush x:Key="ScrollBarPressedBrush" Color="#202020" />

	<!-- Triangular button style -->
	<Style x:Key="ScrollBarRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border 
						x:Name="Border"
						Margin="0"
						CornerRadius="0"
						Background="{StaticResource ScrollBarColorBrush}"
						BorderBrush="Transparent">
						<Path
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Fill="{StaticResource DefaultForeground}"
							Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollBarPressedBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="Transparent"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Track style -->
	<Style x:Key="ScrollBarTrackStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="Transparent"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Thumb stytle -->
	<Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border
						CornerRadius="0"
						Background="{StaticResource ScrollBarColorBrush}"
						BorderBrush="Transparent"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Custom scroll bar style -->
	<Style x:Key="CustomScrollBarStyle" TargetType="{x:Type ScrollBar}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Style.Triggers>
			<!-- Vertical scroll bar -->
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="{StaticResource ScrollBarSize}"/>
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Margin">
					<Setter.Value>
						<Thickness
							Left="0"
							Top="{StaticResource ScrollBarMarginSize}"
							Right="{StaticResource ScrollBarMarginSize}"
							Bottom="{StaticResource ScrollBarMarginSize}" />
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="{StaticResource ScrollBarRepeatButtonSize}"/>
									<RowDefinition/>
									<RowDefinition MaxHeight="{StaticResource ScrollBarRepeatButtonSize}"/>
								</Grid.RowDefinitions>
								<Border
									Grid.RowSpan="3"
									CornerRadius="0"
									Background="Transparent" />
								<RepeatButton
									Grid.Row="0"
									Style="{StaticResource ScrollBarRepeatButtonStyle}"
									Height="{StaticResource ScrollBarRepeatButtonSize}" 
									Command="ScrollBar.LineUpCommand"
									Content="M 0 4 L 8 4 L 4 0 Z" />
								<Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
									<Track.DecreaseRepeatButton>
										<RepeatButton
											Style="{StaticResource ScrollBarTrackStyle}"
											Command="ScrollBar.PageUpCommand" />
									</Track.DecreaseRepeatButton>
									<Track.Thumb>
										<Thumb
											Style="{StaticResource ScrollBarThumbStyle}"
											Margin="0,1,0,1"/>
									</Track.Thumb>
									<Track.IncreaseRepeatButton>
										<RepeatButton
											Style="{StaticResource ScrollBarTrackStyle}"
											Command="ScrollBar.PageDownCommand" />
									</Track.IncreaseRepeatButton>
								</Track>
								<RepeatButton
									Grid.Row="2"
									Style="{StaticResource ScrollBarRepeatButtonStyle}"
									Height="{StaticResource ScrollBarRepeatButtonSize}"
									Command="ScrollBar.LineDownCommand"
									Content="M 0 0 L 4 4 L 8 0 Z"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<!-- Horizontal scroll bar -->
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="Height" Value="{StaticResource ScrollBarSize}" />
				<Setter Property="Margin">
					<Setter.Value>
						<Thickness
							Left="{StaticResource ScrollBarMarginSize}"
							Top="0"
							Right="{StaticResource ScrollBarMarginSize}"
							Bottom="{StaticResource ScrollBarMarginSize}" />
					</Setter.Value>
				</Setter>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition MaxWidth="{StaticResource ScrollBarRepeatButtonSize}"/>
									<ColumnDefinition/>
									<ColumnDefinition MaxWidth="{StaticResource ScrollBarRepeatButtonSize}"/>
								</Grid.ColumnDefinitions>
								<Border
									Grid.ColumnSpan="3"
									CornerRadius="0"
									Background="Transparent" />
								<RepeatButton
									Grid.Column="0"
									Style="{StaticResource ScrollBarRepeatButtonStyle}"
									Width="{StaticResource ScrollBarRepeatButtonSize}"
									Command="ScrollBar.LineLeftCommand"
									Content="M 4 0 L 4 8 L 0 4 Z" />
								<Track
									x:Name="PART_Track"
									Grid.Column="1"
									IsDirectionReversed="false">
									<Track.DecreaseRepeatButton>
										<RepeatButton
											Style="{StaticResource ScrollBarTrackStyle}"
											Command="ScrollBar.PageLeftCommand" />
									</Track.DecreaseRepeatButton>
									<Track.Thumb>
										<Thumb
											Style="{StaticResource ScrollBarThumbStyle}"
											Margin="1,0,1,0"/>
									</Track.Thumb>
									<Track.IncreaseRepeatButton>
										<RepeatButton
											Style="{StaticResource ScrollBarTrackStyle}"
											Command="ScrollBar.PageRightCommand" />
									</Track.IncreaseRepeatButton>
								</Track>
								<RepeatButton
									Grid.Column="2"
									Style="{StaticResource ScrollBarRepeatButtonStyle}"
									Width="{StaticResource ScrollBarRepeatButtonSize}"
									Command="ScrollBar.LineRightCommand"
									Content="M 0 0 L 4 4 L 0 8 Z"/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ScrollViewer style -->
	<Style x:Key="DefaultScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<ScrollContentPresenter Grid.Column="0" Grid.Row="0">
							<ScrollContentPresenter.Margin>
								<Thickness
									Left="{StaticResource ScrollBarMarginSize}"
									Top="{StaticResource ScrollBarMarginSize}"
									Right="{StaticResource ScrollBarMarginSize}"
									Bottom="{StaticResource ScrollBarMarginSize}" />
							</ScrollContentPresenter.Margin>
						</ScrollContentPresenter>
						<ScrollBar
							x:Name="PART_VerticalScrollBar"
							Grid.Column="1"
							Grid.Row="0"
							Orientation="Vertical"
							Value="{TemplateBinding VerticalOffset}"
							Maximum="{TemplateBinding ScrollableHeight}"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Style="{StaticResource CustomScrollBarStyle}"/>
						<ScrollBar
							x:Name="PART_HorizontalScrollBar"
							Grid.Column="0"
							Grid.Row="1"
							Orientation="Horizontal"
							Value="{TemplateBinding HorizontalOffset}"
							Maximum="{TemplateBinding ScrollableWidth}"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Style="{StaticResource CustomScrollBarStyle}"/>
						<Border Grid.Column="1" Grid.Row="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Gear Path Style -->
	<Style TargetType="{x:Type Path}" x:Key="GearPathStyle">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Stroke" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="StrokeThickness" Value="1"/>
		<Setter Property="Data" Value="M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z"/>
	</Style>

	<!-- Gear Path Style -->
	<Style TargetType="{x:Type Path}" x:Key="SearchPathStyle">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Stroke" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="StrokeThickness" Value="1"/>
		<Setter Property="Data" Value="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
	</Style>

	<!-- All transparent button style -->
	<Style TargetType="{x:Type Button}" x:Key="AllTransparentButtonStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="Transparent" TargetName="Border" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Menu BorderBrush Color -->
	<SolidColorBrush x:Key="MenuBorderBrush" Color="Transparent"/>
	<!-- Menu Click Background Color -->
	<SolidColorBrush x:Key="MenuClickBackground" Color="#353535"/>

	<Style TargetType="{x:Type Menu}" x:Key="DefaultMenuStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
		<Border x:Name="templateRoot" 
                BorderBrush="Transparent" 
                CornerRadius="3"
                Background="Transparent" 
				VerticalAlignment="Center"
                SnapsToDevicePixels="True">
			<Grid VerticalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>

				<ContentPresenter
					ContentTemplate="{TemplateBinding HeaderTemplate}"
					Content="{TemplateBinding Header}"
					Grid.Column="1"
					ContentStringFormat="{TemplateBinding HeaderStringFormat}"
					ContentSource="Header"
					Margin="{TemplateBinding Padding}"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Popup
					x:Name="PART_Popup"
					AllowsTransparency="True"
					Focusable="False"
					IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
					PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
					Placement="Bottom">
					<Border
						x:Name="SubMenuBorder"
						BorderBrush="Transparent"
						Background="{StaticResource PopupBackground}"
						Padding="2">
						<ScrollViewer
							x:Name="SubMenuScrollViewer"
							Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
									<Rectangle
										x:Name="OpaqueRect"
										Fill="{Binding Background, ElementName=SubMenuBorder}"
										Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
										Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
								</Canvas>
								<ItemsPresenter
									x:Name="ItemsPresenter"
									KeyboardNavigation.DirectionalNavigation="Cycle"
									Grid.IsSharedSizeScope="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									KeyboardNavigation.TabNavigation="Cycle"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MouseOverHighlightedBackground}"/>
			</Trigger>
			<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
				<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource SelectedHighlightedBackground}" />
				<Setter Property="BorderThickness" Value="1"></Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="MenuItemControlTemplate2" TargetType="{x:Type MenuItem}">
		<Border
			x:Name="templateRoot"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			Background="{TemplateBinding Background}"
			SnapsToDevicePixels="True">
			<Grid Margin="-1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
					<ColumnDefinition Width="13"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="30"/>
					<ColumnDefinition SharedSizeGroup="MenuIbemIGTColumnGroup" Width="Auto"/>
					<ColumnDefinition Width="20"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter
					x:Name="Icon"
					Content="{TemplateBinding Icon}"
					ContentSource="Icon"
					HorizontalAlignment="Center"
					Height="16"
					Margin="3"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
					VerticalAlignment="Center"
					Width="16"/>
				<Border
					x:Name="GlyphPanel"
					BorderBrush="Red"
					BorderThickness="1"
					Background="Blue"
					ClipToBounds="False"
					HorizontalAlignment="Center"
					Height="22"
					Margin="-1,0,0,0"
					Visibility="Hidden"
					VerticalAlignment="Center"
					Width="22">
					<Path
						x:Name="Glyph"
						Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
						Fill="#FF212121"
						FlowDirection="LeftToRight"
						Height="11"
						Width="10"/>
				</Border>
				<ContentPresenter
					x:Name="menuHeaderContainer"
					ContentTemplate="{TemplateBinding HeaderTemplate}"
					Content="{TemplateBinding Header}"
					Grid.Column="2"
					ContentStringFormat="{TemplateBinding HeaderStringFormat}"
					ContentSource="Header"
					HorizontalAlignment="Left"
					Margin="{TemplateBinding Padding}"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
					VerticalAlignment="Center"/>
				<TextBlock
					x:Name="menuGestureText"
					Grid.Column="4"
					Margin="{TemplateBinding Padding}"
					Opacity="0.7"
					Text="{TemplateBinding InputGestureText}"
					VerticalAlignment="Center"/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuBorderBrush}"/>
				<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MouseOverHighlightedBackground}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
				<Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True"/>
					<Condition Property="IsEnabled" Value="False"/>
				</MultiTrigger.Conditions>
				<Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
				<Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- CheckBox Style -->
	<Style TargetType="{x:Type CheckBox}" x:Key="DefaultCheckBoxStyle">
		<Setter	Property="Background" Value="{StaticResource DefaultBackground}"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource MouseOverHighlightedBackground}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ToggleSwitch Style -->
	<Style TargetType="{x:Type control:ToggleSwitch}" x:Key="DefaultToggleSwitchStyle">
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBackground}"/>
		<Setter Property="CircleBackgroundColor" Value="White"/>
		<Setter Property="CircleBorderColor" Value="Black"/>
		<Setter Property="TrackBackgroundOffColor"  Value="Black"/>
		<Setter Property="TrackBackgroundOnColor" Value="LawnGreen"/>
	</Style>
</ResourceDictionary>